openapi: 3.0.0
servers:
  - url: "http://localhost:3000"
info:
  title: Telegrammo
  description: le API di Telegrammo
  version: 1.0.0
paths:
  /user:
    post:
      tags: ["login"]
      operationId: doLogin
      summary: "effettua il log in"
      description: "fa il log in all'utente se esiste, altrimenti lo crea"
      requestBody: 
        description: "username"
        content:
          application/json: 
            schema: 
              description: "username"
              type: object
              properties:
                
                username:
                  type: string
                  minLength: 1
                  maxLength: 16
                  pattern: ^[a-zA-Z0-9]+$
                  example: "pippobaudo12"
      responses: 
        "200": 
          description: "utente loggato"
          content:
            application/json:
              schema:
                description: "restituisce id"
                type: object
                properties:
                  identifier: 
                    type: integer
                    minimum: 1
                    maximum: 99999999
                    example: 124
        "400":
          $ref: "#/components/responses/input_malformato"
  /user/name:
    put:
      tags: ["user"]
      security:
        - bearerAuth: []
      
      operationId: setMyUserName
      summary: "modifica username"
      description: "prima controlla che l'username dell'utente non sia duplicato, poi lo modifica"
      requestBody: 
        description: "prende nuovo username"
        content:
          application/json: 
            schema: 
              description: "nuovo username"
              type: object
              properties:
                
                username:
                  type: string
                  minLength: 1
                  maxLength: 16
                  pattern: ^[a-zA-Z0-9]+$
                  example: "pippobaudo12"
      responses: 
        "201": 
          description: "username cambiato"
        "400":
          $ref: "#/components/responses/input_malformato"
        "401":
          description: "non autenticato"
        "409":
          description: "username gia' esistente"
  /user/photo:
    put:
      tags: ["user"]
      security:
        - bearAuth: []
      operationId: setMyPhoto
      summary: "modifica photo"
      description: "se l'utente non ha impostata una foto allora la imposta, altrimenti la cambia"
      requestBody:
        description: "viene presa la foto"
        content:
          multipart/form-data: 
            schema:
              description: "foto profilo"
              type: object
              properties:
                propic: 
                  type: string
                  format: binary
      responses:
        "201": 
          description: "foto cambiata"
        "400":
          $ref: "#/components/responses/input_malformato"
        "401":
          description: "non autenticato"
  /conversations: 
    post:
      tags: ["conversation"]
      operationId: CreateConversation
      summary: "crea una conversazione"
      description: "se la conversazione gia' esiste non la crea, se non esiste la crea"
      requestBody:
        description: "dati chat"
        content:
          multipart/form-data:
            schema:
              description: "partecipanti"
              type: object
              properties:
                participants:
                  description: "array di tutti i partecipanti alla chat"
                  type: array
                  minItems: 1
                  maxItems: 999999
                  default: []
                  items: 
                    type: object
                    properties:
                      iduser: 
                        description: "id dello user"
                        type: integer
                        minimum: 1
                        maximum: 999999
                        example: 13
                nome:
                  description: "nome del gruppo"
                  type: string
                  minLength: 1
                  maxLength: 999999
                  example: "carciofo"
                gruppo:
                  description: "False se non e' un gruppo, True se e' un gruppo"
                  type: boolean 
                  example: False
                propic:
                  description: "immagine del gruppo"
                  type: string
                  format: binary
      responses:
        "200": 
          description: "chat/gruppo creato correttamente"
          content:
            application/json:
              schema:
                description: "restituisce id"
                type: object
                properties:
                  identifier: 
                    type: integer
                    minimum: 1
                    maximum: 99999999
                    example: 124

                
components:
  responses:
    input_malformato:
      description: "errore log in"
      content:
        application/json:
          schema:
            description: "restituisce errore"
            type: object
            properties:
              error: 
                type: string
                minLength: 1
                maxLength: 1000
                example: "errore nella struttura dei dati"


 